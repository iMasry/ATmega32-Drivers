Archive member included because of file (symbol)

d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                              d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o (exit)
d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                              ./Src/EXTI_program.o (__do_clear_bss)

Memory Configuration

Name             Origin             Length             Attributes
text             0x00000000         0x00020000         xr
data             0x00800060         0x0000ffa0         rw !x
eeprom           0x00810000         0x00010000         rw !x
fuse             0x00820000         0x00000400         rw !x
lock             0x00830000         0x00000400         rw !x
signature        0x00840000         0x00000400         rw !x
*default*        0x00000000         0xffffffff

Linker script and memory map

LOAD d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
LOAD ./Src/DIO_program.o
LOAD ./Src/EXTI_program.o
LOAD ./Src/GI_program.o
LOAD ./Src/main.o
LOAD d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a
LOAD d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5\libc.a
LOAD d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a

.hash
 *(.hash)

.dynsym
 *(.dynsym)

.dynstr
 *(.dynstr)

.gnu.version
 *(.gnu.version)

.gnu.version_d
 *(.gnu.version_d)

.gnu.version_r
 *(.gnu.version_r)

.rel.init
 *(.rel.init)

.rela.init
 *(.rela.init)

.rel.text
 *(.rel.text)
 *(.rel.text.*)
 *(.rel.gnu.linkonce.t*)

.rela.text
 *(.rela.text)
 *(.rela.text.*)
 *(.rela.gnu.linkonce.t*)

.rel.fini
 *(.rel.fini)

.rela.fini
 *(.rela.fini)

.rel.rodata
 *(.rel.rodata)
 *(.rel.rodata.*)
 *(.rel.gnu.linkonce.r*)

.rela.rodata
 *(.rela.rodata)
 *(.rela.rodata.*)
 *(.rela.gnu.linkonce.r*)

.rel.data
 *(.rel.data)
 *(.rel.data.*)
 *(.rel.gnu.linkonce.d*)

.rela.data
 *(.rela.data)
 *(.rela.data.*)
 *(.rela.gnu.linkonce.d*)

.rel.ctors
 *(.rel.ctors)

.rela.ctors
 *(.rela.ctors)

.rel.dtors
 *(.rel.dtors)

.rela.dtors
 *(.rela.dtors)

.rel.got
 *(.rel.got)

.rela.got
 *(.rela.got)

.rel.bss
 *(.rel.bss)

.rela.bss
 *(.rela.bss)

.rel.plt
 *(.rel.plt)

.rela.plt
 *(.rela.plt)

.text           0x00000000      0xb98
 *(.vectors)
 .vectors       0x00000000       0x54 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000000                __vectors
                0x00000000                __vector_default
 *(.vectors)
 *(.progmem.gcc*)
 *(.progmem*)
                0x00000054                . = ALIGN (0x2)
                0x00000054                __trampolines_start = .
 *(.trampolines)
 .trampolines   0x00000054        0x0 linker stubs
 *(.trampolines*)
                0x00000054                __trampolines_end = .
 *(.jumptables)
 *(.jumptables*)
 *(.lowtext)
 *(.lowtext*)
                0x00000054                __ctors_start = .
 *(.ctors)
                0x00000054                __ctors_end = .
                0x00000054                __dtors_start = .
 *(.dtors)
                0x00000054                __dtors_end = .
 SORT(*)(.ctors)
 SORT(*)(.dtors)
 *(.init0)
 .init0         0x00000054        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000054                __init
 *(.init0)
 *(.init1)
 *(.init1)
 *(.init2)
 .init2         0x00000054        0xc d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init2)
 *(.init3)
 *(.init3)
 *(.init4)
 .init4         0x00000060       0x10 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000060                __do_clear_bss
 *(.init4)
 *(.init5)
 *(.init5)
 *(.init6)
 *(.init6)
 *(.init7)
 *(.init7)
 *(.init8)
 *(.init8)
 *(.init9)
 .init9         0x00000070        0x8 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 *(.init9)
 *(.text)
 .text          0x00000078        0x4 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
                0x00000078                __vector_12
                0x00000078                __bad_interrupt
                0x00000078                __vector_6
                0x00000078                __vector_11
                0x00000078                __vector_13
                0x00000078                __vector_17
                0x00000078                __vector_19
                0x00000078                __vector_7
                0x00000078                __vector_5
                0x00000078                __vector_4
                0x00000078                __vector_9
                0x00000078                __vector_15
                0x00000078                __vector_8
                0x00000078                __vector_14
                0x00000078                __vector_10
                0x00000078                __vector_16
                0x00000078                __vector_18
                0x00000078                __vector_20
 .text          0x0000007c        0x0 ./Src/DIO_program.o
 .text          0x0000007c        0x0 ./Src/EXTI_program.o
 .text          0x0000007c        0x0 ./Src/GI_program.o
 .text          0x0000007c        0x0 ./Src/main.o
 .text          0x0000007c        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text          0x0000007c        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x0000007c                . = ALIGN (0x2)
 *(.text.*)
 .text.MDIO_voidInit
                0x0000007c       0x4a ./Src/DIO_program.o
                0x0000007c                MDIO_voidInit
 .text.MDIO_voidSetPinDirection
                0x000000c6      0x22c ./Src/DIO_program.o
                0x000000c6                MDIO_voidSetPinDirection
 .text.MDIO_voidSetPinValue
                0x000002f2      0x22c ./Src/DIO_program.o
                0x000002f2                MDIO_voidSetPinValue
 .text.MDIO_u8GetPinValue
                0x0000051e       0xf4 ./Src/DIO_program.o
                0x0000051e                MDIO_u8GetPinValue
 .text.MDIO_voidSetPortDirection
                0x00000612       0x82 ./Src/DIO_program.o
                0x00000612                MDIO_voidSetPortDirection
 .text.MDIO_voidSetPortValue
                0x00000694       0x82 ./Src/DIO_program.o
                0x00000694                MDIO_voidSetPortValue
 .text.MEXTI_voidConfig
                0x00000716       0xe0 ./Src/EXTI_program.o
                0x00000716                MEXTI_voidConfig
 .text.MEXTI_voidEnable
                0x000007f6       0x6e ./Src/EXTI_program.o
                0x000007f6                MEXTI_voidEnable
 .text.MEXTI_voidDisable
                0x00000864       0x6e ./Src/EXTI_program.o
                0x00000864                MEXTI_voidDisable
 .text.MEXTI_voidClearFlag
                0x000008d2       0x6e ./Src/EXTI_program.o
                0x000008d2                MEXTI_voidClearFlag
 .text.MEXTI_voidSetCallBack
                0x00000940       0x7a ./Src/EXTI_program.o
                0x00000940                MEXTI_voidSetCallBack
 .text.__vector_1
                0x000009ba       0x66 ./Src/EXTI_program.o
                0x000009ba                __vector_1
 .text.__vector_2
                0x00000a20       0x66 ./Src/EXTI_program.o
                0x00000a20                __vector_2
 .text.__vector_3
                0x00000a86       0x66 ./Src/EXTI_program.o
                0x00000a86                __vector_3
 .text.MGI_voidEnable
                0x00000aec       0x1c ./Src/GI_program.o
                0x00000aec                MGI_voidEnable
 .text.MGI_voidDisable
                0x00000b08       0x1c ./Src/GI_program.o
                0x00000b08                MGI_voidDisable
 .text.main     0x00000b24       0x2c ./Src/main.o
                0x00000b24                main
 .text.TOGGLE_LED
                0x00000b50       0x44 ./Src/main.o
                0x00000b50                TOGGLE_LED
 .text.libgcc   0x00000b94        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .text.libgcc   0x00000b94        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
                0x00000b94                . = ALIGN (0x2)
 *(.fini9)
 .fini9         0x00000b94        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
                0x00000b94                exit
                0x00000b94                _exit
 *(.fini9)
 *(.fini8)
 *(.fini8)
 *(.fini7)
 *(.fini7)
 *(.fini6)
 *(.fini6)
 *(.fini5)
 *(.fini5)
 *(.fini4)
 *(.fini4)
 *(.fini3)
 *(.fini3)
 *(.fini2)
 *(.fini2)
 *(.fini1)
 *(.fini1)
 *(.fini0)
 .fini0         0x00000b94        0x4 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 *(.fini0)
                0x00000b98                _etext = .

.data           0x00800060        0x0 load address 0x00000b98
                0x00800060                PROVIDE (__data_start, .)
 *(.data)
 .data          0x00800060        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .data          0x00800060        0x0 ./Src/DIO_program.o
 .data          0x00800060        0x0 ./Src/EXTI_program.o
 .data          0x00800060        0x0 ./Src/GI_program.o
 .data          0x00800060        0x0 ./Src/main.o
 .data          0x00800060        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .data          0x00800060        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.data*)
 *(.rodata)
 *(.rodata*)
 *(.gnu.linkonce.d*)
                0x00800060                . = ALIGN (0x2)
                0x00800060                _edata = .
                0x00800060                PROVIDE (__data_end, .)

.bss            0x00800060        0x8
                0x00800060                PROVIDE (__bss_start, .)
 *(.bss)
 .bss           0x00800060        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/../../../../avr/lib/avr5/crtm32.o
 .bss           0x00800060        0x0 ./Src/DIO_program.o
 .bss           0x00800060        0x0 ./Src/EXTI_program.o
 .bss           0x00800060        0x0 ./Src/GI_program.o
 .bss           0x00800060        0x0 ./Src/main.o
 .bss           0x00800060        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_exit.o)
 .bss           0x00800060        0x0 d:/imt diploma/01- embedded systems avr/05- tools/01- imt sdk/imt_sdk_win_64/winavr/bin/../lib/gcc/avr/4.3.3/avr5\libgcc.a(_clear_bss.o)
 *(.bss*)
 .bss.EXTI0_CallBack
                0x00800060        0x2 ./Src/EXTI_program.o
                0x00800060                EXTI0_CallBack
 .bss.EXTI1_CallBack
                0x00800062        0x2 ./Src/EXTI_program.o
                0x00800062                EXTI1_CallBack
 .bss.EXTI2_CallBack
                0x00800064        0x2 ./Src/EXTI_program.o
                0x00800064                EXTI2_CallBack
 .bss.local_u8Flag.1304
                0x00800066        0x2 ./Src/main.o
 *(COMMON)
                0x00800068                PROVIDE (__bss_end, .)
                0x00000b98                __data_load_start = LOADADDR (.data)
                0x00000b98                __data_load_end = (__data_load_start + SIZEOF (.data))

.noinit         0x00800068        0x0
                0x00800068                PROVIDE (__noinit_start, .)
 *(.noinit*)
                0x00800068                PROVIDE (__noinit_end, .)
                0x00800068                _end = .
                0x00800068                PROVIDE (__heap_start, .)

.eeprom         0x00810000        0x0
 *(.eeprom*)
                0x00810000                __eeprom_end = .

.fuse
 *(.fuse)
 *(.lfuse)
 *(.hfuse)
 *(.efuse)

.lock
 *(.lock*)

.signature
 *(.signature*)

.stab           0x00000000      0xe10
 *(.stab)
 .stab          0x00000000      0x558 ./Src/DIO_program.o
 .stab          0x00000558      0x3fc ./Src/EXTI_program.o
                                0x480 (size before relaxing)
 .stab          0x00000954      0x144 ./Src/GI_program.o
                                0x1c8 (size before relaxing)
 .stab          0x00000a98      0x378 ./Src/main.o
                                0x3fc (size before relaxing)

.stabstr        0x00000000      0xa4d
 *(.stabstr)
 .stabstr       0x00000000      0xa4d ./Src/DIO_program.o

.stab.excl
 *(.stab.excl)

.stab.exclstr
 *(.stab.exclstr)

.stab.index
 *(.stab.index)

.stab.indexstr
 *(.stab.indexstr)

.comment
 *(.comment)

.debug
 *(.debug)

.line
 *(.line)

.debug_srcinfo
 *(.debug_srcinfo)

.debug_sfnames
 *(.debug_sfnames)

.debug_aranges
 *(.debug_aranges)

.debug_pubnames
 *(.debug_pubnames)

.debug_info
 *(.debug_info)
 *(.gnu.linkonce.wi.*)

.debug_abbrev
 *(.debug_abbrev)

.debug_line
 *(.debug_line)

.debug_frame
 *(.debug_frame)

.debug_str
 *(.debug_str)

.debug_loc
 *(.debug_loc)

.debug_macinfo
 *(.debug_macinfo)
OUTPUT(EXTI_Driver.elf elf32-avr)
LOAD linker stubs
